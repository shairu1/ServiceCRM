@using ServiceCRM.Services.UserServiceCenterProvider
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - ServiceCRM</title>

    <!-- Шрифт Inter (минималистичный и округлый) -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/ServiceCRM.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">

    <link rel="icon" type="image/svg+xml" href="~/favicon-rocket.svg" />

    <script>
        // Установка темы до рендера страницы
        (function () {
            const theme = localStorage.getItem("theme") || "light";
            if (theme === "dark") {
                document.documentElement.classList.add("dark-mode");
            }
        })();
    </script>

    <style>
        :root {
            --font-family: 'Inter', sans-serif;
            /* Светлая тема */
            --bg-color: #ffffff;
            --bg-secondary: #f6f8fa;
            --text-color: #1f2328;
            --text-muted: #656d76;
            --border-color: #d0d7de;
            --link-color: #0969da;
            --link-hover: #054da3;
            --navbar-bg: #ffffff;
            --navbar-text: #1f2328;
            --footer-bg: #f6f8fa;
        }

        body.dark-mode {
            --bg-color: #0d1117;
            --bg-secondary: #161b22;
            --text-color: #c9d1d9;
            --text-muted: #8b949e;
            --border-color: #30363d;
            --link-color: #58a6ff;
            --link-hover: #1f6feb;
            --navbar-bg: #161b22;
            --navbar-text: #ffffff;
            --footer-bg: #161b22;
        }

        body {
            background-color: var(--bg-color);
            color: var(--text-color);
            font-family: var(--font-family);
            font-size: 0.95rem;
            transition: background-color 0.3s, color 0.3s;
        }

        /* Navbar */
        .navbar-custom {
            background: var(--navbar-bg);
            border-bottom: 1px solid var(--border-color);
            transition: background 0.3s, border-color 0.3s;
        }

        .navbar-brand,
        .nav-link,
        .service-label,
        .theme-toggle-btn {
            color: var(--navbar-text) !important;
            transition: color 0.3s;
            font-weight: 500;
        }

            .navbar-brand:hover,
            .nav-link:hover {
                color: var(--link-hover) !important;
            }

        /* Service подпись */
        .service-label {
            font-size: 0.75rem;
            font-weight: 600;
            opacity: 0.7;
        }

        /* Кнопка темы */
        .theme-toggle-btn {
            background: none;
            border: none;
            font-size: 1.25rem;
            cursor: pointer;
        }

        /* Footer */
        footer {
            font-size: 0.85rem;
            border-top: 1px solid var(--border-color);
            background-color: var(--footer-bg);
            color: var(--text-muted);
            transition: background-color 0.3s, color 0.3s;
        }

        /* Сбрасываем стиль автозаполнения */
        input:-webkit-autofill,
        input:-webkit-autofill:hover,
        input:-webkit-autofill:focus,
        input:-webkit-autofill:active {
            -webkit-box-shadow: 0 0 0px 1000px var(--bg-color) inset !important;
            -webkit-text-fill-color: var(--text-color) !important;
            transition: background-color 5000s ease-in-out 0s;
        }

        /* Стили для выпадающего меню на мобильных устройствах */
        .navbar-toggler {
            border: none;
            padding: 0.25rem 0.5rem;
        }

        .navbar-toggler-icon {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%2833, 37, 41, 0.75%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
        }

        .dark-mode .navbar-toggler-icon {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%28255, 255, 255, 0.75%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
        }

        /* Адаптивные стили для элементов навигации */
        .nav-item .service-label {
            display: none;
        }

        .nav-item .dropdown {
            margin-top: 0.5rem;
        }

        /* На мобильных устройствах */
        .navbar-collapse {
            background-color: var(--navbar-bg);
            border-radius: 0.375rem;
            margin-top: 0.5rem;
            padding: 1rem;
            border: 1px solid var(--border-color);
        }

        /* На десктопе */
        .desktop-nav-items {
            display: flex;
            align-items: center;
        }

        /* Медиа-запросы для адаптивности */
        @@media (max-width: 991.98px) {
            .desktop-nav-items {
                display: none !important;
            }

            .navbar-collapse .nav-item {
                margin-bottom: 0.5rem;
            }

            .navbar-collapse .service-label {
                display: block;
                margin-bottom: 0.25rem;
            }

            .navbar-collapse .theme-toggle-btn {
                margin-top: 1rem;
                padding: 0.5rem 0;
            }
        }

        @@media (min-width: 992px) {
            .navbar-collapse {
                background-color: transparent;
                border: none;
                margin-top: 0;
                padding: 0;
            }

            .mobile-only {
                display: none !important;
            }
        }
    </style>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg navbar-custom">
            <div class="container">
                <a class="navbar-brand fw-semibold" asp-controller="Home" asp-action="Index">
                    <i class="bi bi-rocket-takeoff-fill me-1"></i> ServiceCRM
                </a>

                <!-- Кнопка меню для мобильных устройств -->
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#mainNav" aria-controls="mainNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="collapse navbar-collapse" id="mainNav">
                    @inject IUserServiceCenterProvider UserServiceProvider
                    @{
                        var services = User.Identity?.IsAuthenticated == true
                        ? await UserServiceProvider.GetUserServiceCentersAsync(User)
                        : Enumerable.Empty<ServiceCRM.Models.ServiceCenter>();
                        var cookie = Context.Request.Cookies["SelectedServiceId"];
                        int? selectedServiceId = cookie != null ? int.Parse(cookie) : null;
                    }

                    <!-- Навигационные ссылки для десктопа -->
                    <ul class="navbar-nav me-auto desktop-nav-items">
                        @if (User.Identity?.IsAuthenticated == true)
                        {
                            <li class="nav-item"><a class="nav-link" asp-controller="Orders" asp-action="Index">@Localizer["OrdersButton"]</a></li>
                            <li class="nav-item"><a class="nav-link" asp-controller="Analytics" asp-action="Index">@Localizer["AnalyticsButton"]</a></li>
                            <li class="nav-item"><a class="nav-link" asp-controller="ServiceCenters" asp-action="Index">@Localizer["ServiceCentersButton"]</a></li>
                            <li class="nav-item"><a class="nav-link" asp-controller="Settings" asp-action="Index">@Localizer["SettingsButton"]</a></li>
                        }
                    </ul>

                    <!-- Правая часть навигации для десктопа -->
                    <ul class="navbar-nav ms-auto align-items-center desktop-nav-items">
                        @if (User.Identity?.IsAuthenticated == true && services.Any())
                        {
                            <li class="me-3">
                                <span class="service-label">@Localizer["ServiceCenterLabel"]</span>
                            </li>

                            <li class="nav-item d-flex flex-column align-items-start me-3">
                                @await Component.InvokeAsync("UserServiceCenters", new { selectedServiceId = selectedServiceId })
                            </li>
                        }
                        else if (User.Identity?.IsAuthenticated == false)
                        {
                            <li class="nav-item"><a class="nav-link" asp-controller="Auth" asp-action="Login">@Localizer["LoginButton"]</a></li>
                            <li class="nav-item"><a class="nav-link" asp-controller="Auth" asp-action="Register">@Localizer["RegisterButton"]</a></li>
                        }

                        <!-- Переключение темы -->
                        <li class="nav-item">
                            <button class="theme-toggle-btn" id="themeToggle">
                                <i class="bi bi-sun-fill" id="themeIcon"></i>
                            </button>
                        </li>
                    </ul>

                    <!-- Мобильное меню (отображается только на мобильных) -->
                    <div class="mobile-only">
                        @if (User.Identity?.IsAuthenticated == true)
                        {
                            <div class="nav-item"><a class="nav-link d-block py-2" asp-controller="Orders" asp-action="Index">@Localizer["OrdersButton"]</a></div>
                            <div class="nav-item"><a class="nav-link d-block py-2" asp-controller="Analytics" asp-action="Index">@Localizer["AnalyticsButton"]</a></div>
                            <div class="nav-item"><a class="nav-link d-block py-2" asp-controller="ServiceCenters" asp-action="Index">@Localizer["ServiceCentersButton"]</a></div>
                            <div class="nav-item"><a class="nav-link d-block py-2" asp-controller="Settings" asp-action="Index">@Localizer["SettingsButton"]</a></div>
                        }

                        @if (User.Identity?.IsAuthenticated == true && services.Any())
                        {
                            <div class="nav-item m-3">
                                <span class="service-label">@Localizer["ServiceCenterLabel"]</span>
                                @await Component.InvokeAsync("UserServiceCenters", new { selectedServiceId = selectedServiceId })
                            </div>
                        }
                        else if (User.Identity?.IsAuthenticated == false)
                        {
                            <div class="nav-item"><a class="nav-link d-block py-2" asp-controller="Auth" asp-action="Login">@Localizer["LoginButton"]</a></div>
                            <div class="nav-item"><a class="nav-link d-block py-2" asp-controller="Auth" asp-action="Register">@Localizer["RegisterButton"]</a></div>
                        }

                        <!-- Переключение темы в мобильном меню -->
                        <div class="nav-item ms-3">
                            <button class="theme-toggle-btn d-block w-100 text-start" id="themeToggleMobile" style="padding: 0.5rem 0;">
                                <i class="bi bi-sun-fill me-2" id="themeIconMobile"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        <main role="main" class="py-4">
            @RenderBody()
        </main>
    </div>

    <footer class="footer mt-auto">
        <div class="container py-3 text-center">
            &copy; 2025 - ServiceCRM • <a asp-controller="Home" asp-action="Privacy" class="text-decoration-none">Privacy</a>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
        const body = document.body;
        const toggleBtn = document.getElementById("themeToggle");
        const themeIcon = document.getElementById("themeIcon");
        const toggleBtnMobile = document.getElementById("themeToggleMobile");
        const themeIconMobile = document.getElementById("themeIconMobile");

        // Функция для применения темы
        function applyTheme(isDark) {
            if (isDark) {
                body.classList.add("dark-mode");
                themeIcon.classList.replace("bi-sun-fill", "bi-moon-fill");
                themeIconMobile.classList.replace("bi-sun-fill", "bi-moon-fill");
            } else {
                body.classList.remove("dark-mode");
                themeIcon.classList.replace("bi-moon-fill", "bi-sun-fill");
                themeIconMobile.classList.replace("bi-moon-fill", "bi-sun-fill");
            }
            localStorage.setItem("theme", isDark ? "dark" : "light");
        }

        // Проверка текущей темы
        if (localStorage.getItem("theme") === "dark") {
            applyTheme(true);
        }

        // Обработчики для переключения темы
        toggleBtn.addEventListener("click", () => {
            const isDark = !body.classList.contains("dark-mode");
            applyTheme(isDark);
        });

        toggleBtnMobile.addEventListener("click", () => {
            const isDark = !body.classList.contains("dark-mode");
            applyTheme(isDark);
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>