@model ServiceCRM.Models.EditOrderViewModel
@using ServiceCRM.Models

@{
    ViewData["Title"] = "Редактировать заказ";
}

<div class="container mt-5 d-flex justify-content-center">
    <div class="col-md-8 mb-5 col-lg-6">

        <h3 class="text-center mb-4">Редактировать заказ</h3>

        <form asp-action="Edit" method="post" class="row g-3 needs-validation" novalidate>

            <div class="d-flex align-items-center justify-content-left gap-2 mb-2">
                <span class="text-danger validation-summary">
                    @Html.ValidationSummary()
                </span>
            </div>

            <input type="hidden" asp-for="Id" />

            <div class="col-md-4">
                <label asp-for="DeviceType" class="form-label">Тип устройства</label>
                <input asp-for="DeviceType" class="form-control" />
                <span asp-validation-for="DeviceType" class="text-danger"></span>
            </div>

            <div class="col-md-4">
                <label asp-for="Brand" class="form-label">Марка</label>
                <input asp-for="Brand" class="form-control" />
                <span asp-validation-for="Brand" class="text-danger"></span>
            </div>

            <div class="col-md-4">
                <label asp-for="Model" class="form-label">Модель</label>
                <input asp-for="Model" class="form-control" />
                <span asp-validation-for="Model" class="text-danger"></span>
            </div>

            <div class="col-12">
                <label asp-for="Issue" class="form-label">Неисправность</label>
                <input asp-for="Issue" class="form-control" />
                <span asp-validation-for="Issue" class="text-danger"></span>
            </div>

            <div class="col-md-6">
                <label asp-for="Counterparty" class="form-label">Контрагент</label>
                <input asp-for="Counterparty" class="form-control" />
                <span asp-validation-for="Counterparty" class="text-danger"></span>
            </div>

            <div class="col-md-3">
                <label asp-for="Amount" class="form-label">Сумма</label>
                <input asp-for="Amount" class="form-control" />
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>

            <div class="col-md-3">
                <label asp-for="Status" class="form-label">Статус</label>
                <select asp-for="Status" asp-items="Html.GetEnumSelectList<OrderStatus>()" class="form-select"></select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>

            <div class="col-md-4">
                <label asp-for="CreatedAt" class="form-label">Дата создания</label>
                <input asp-for="CreatedAt" class="form-control" type="datetime-local" />
                <span asp-validation-for="CreatedAt" class="text-danger"></span>
            </div>

            <div class="col-12 d-flex gap-2 mt-3">
                <button class="btn btn-primary flex-fill" type="submit">Сохранить</button>
                <a class="btn btn-outline-secondary flex-fill" asp-action="Index">Отмена</a>
            </div>

        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const amountInput = document.querySelector('input[name="Amount"]');
            if (!amountInput) return;

            function formatAmount(value) {
                // Заменяем запятую на точку
                value = value.replace(',', '.');

                // Ограничиваем максимум 2 знака после точки
                if (value.includes('.')) {
                    const parts = value.split('.');
                    parts[1] = parts[1].slice(0, 2);
                    value = parts.join('.');
                }

                // Оставляем только цифры и одну точку
                value = value.replace(/[^0-9.]/g, '');

                // Если точек больше одной, оставляем только первую
                const firstDot = value.indexOf('.');
                if (firstDot !== -1) {
                    const before = value.slice(0, firstDot + 1);
                    const after = value.slice(firstDot + 1).replace(/\./g, '');
                    value = before + after;
                }

                return value;
            }

            // Преобразуем значение при загрузке страницы
            amountInput.value = formatAmount(amountInput.value);

            // Преобразуем значение при вводе
            amountInput.addEventListener("input", function () {
                amountInput.value = formatAmount(amountInput.value);
            });
        });
    </script>
}

<style>
    /* Основные стили формы */
    .form-control, .form-select {
        border-radius: 0.375rem;
        font-size: 0.95rem;
        transition: background-color 0.3s, color 0.3s, border-color 0.3s;
    }

    /* Темная тема для полей */
    body.dark-mode .form-control,
    body.dark-mode .form-select {
        background-color: #161b22;
        color: #c9d1d9;
        border: 1px solid #30363d;
    }

        body.dark-mode .form-control:focus,
        body.dark-mode .form-select:focus {
            background-color: #161b22;
            color: #c9d1d9;
            border-color: #3b82f6;
            box-shadow: 0 0 0 0.2rem rgba(59,130,246,0.25);
        }

    .btn {
        border-radius: 0.375rem;
        font-size: 0.95rem;
        min-height: 42px;
    }

    h3 {
        font-weight: 500;
    }
</style>
